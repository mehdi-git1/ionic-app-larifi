<?xml version="1.0"?>
<testsuite name="Chrome 65.0.3325 (Windows 7.0.0)" package="" timestamp="2019-01-07T14:45:17" id="0" hostname="AFR697663" tests="139" errors="1" failures="0" time="2.218">
  <properties>
    <property name="browser.fullName" value="Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36"/>
  </properties>
  <testcase name="appComponent routingApp doit rediriger vers la page PncHomePage en cas d'AUTHENTIFICATION_OK" time="0.506" classname="Chrome_65_0_3325_(Windows_7_0_0).appComponent"/>
  <testcase name="appComponent routingApp doit publier user:authenticationDone en cas d'AUTHENTIFICATION_OK" time="0.343" classname="Chrome_65_0_3325_(Windows_7_0_0).appComponent"/>
  <testcase name="appComponent routingApp doit rediriger vers la page AuthenticationPage en cas d'AUTHENTICATION_KO" time="0.293" classname="Chrome_65_0_3325_(Windows_7_0_0).appComponent"/>
  <testcase name="appComponent routingApp doit rediriger vers la page d'impersonnification en cas d'IMPERSONATE_MODE" time="0.275" classname="Chrome_65_0_3325_(Windows_7_0_0).appComponent"/>
  <testcase name="appComponent routingApp doit rediriger vers la page GenericMessagePage en cas d'INIT_KO avec le message d'erreur suivant&#xA;        'GLOBAL.MESSAGES.ERROR.APPLICATION_NOT_INITIALIZED'" time="0.255" classname="Chrome_65_0_3325_(Windows_7_0_0).appComponent"/>
  <testcase name="appComponent routingApp doit rediriger vers la page GenericMessagePage en cas d'INIT_KO avec le message d'erreur suivant&#xA;        'GLOBAL.MESSAGES.ERROR.SERVER_APPLICATION_UNAVAILABLE'" time="0.26" classname="Chrome_65_0_3325_(Windows_7_0_0).appComponent"/>
  <testcase name="appComponent routingApp doit rediriger vers la page GenericMessagePage en cas de retour undefined avec le message d'erreur suivant&#xA;        'GLOBAL.MESSAGES.ERROR.APPLICATION_NOT_INITIALIZED'" time="0.249" classname="Chrome_65_0_3325_(Windows_7_0_0).appComponent"/>
  <testcase name="AuthenticationService initFonctionnalApp doit retourner un message d'erreur si l'utilisateur n'est pas connecté" time="0.005" classname="Chrome_65_0_3325_(Windows_7_0_0).AuthenticationService"/>
  <testcase name="AuthenticationService initFonctionnalApp doit appeler la fonction manageUserInformationsInApp si l'utilisateur est connecté" time="0.002" classname="Chrome_65_0_3325_(Windows_7_0_0).AuthenticationService"/>
  <testcase name="AuthenticationService manageUserInformationsInApp doit renvoyer un message d'erreur INIT_KO si putAuthenticatedUserInSession echoue" time="0.001" classname="Chrome_65_0_3325_(Windows_7_0_0).AuthenticationService"/>
  <testcase name="AuthenticationService managePutauthenticationInSession Si la fonction putAuthenticatedUserInSession a réussi gestion de l'initialisation des paramétres utilisateurs doit initialiser les paramétres pnc si l'utilisateur est un PNC" time="0.001" classname="Chrome_65_0_3325_(Windows_7_0_0).AuthenticationService"/>
  <testcase name="AuthenticationService managePutauthenticationInSession Si la fonction putAuthenticatedUserInSession a réussi gestion de l'initialisation des paramétres utilisateurs ne doit pas initialiser les paramétres pnc si l'utilisateur n'est pas un PNC" time="0.001" classname="Chrome_65_0_3325_(Windows_7_0_0).AuthenticationService"/>
  <testcase name="AuthenticationService managePutauthenticationInSession Si la fonction putAuthenticatedUserInSession a réussi Mode offline desactivé doit renvoyer le type IMPERSONATE_MODE si on doit être en mode impersonifie" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).AuthenticationService"/>
  <testcase name="AuthenticationService managePutauthenticationInSession Si la fonction putAuthenticatedUserInSession a réussi Mode offline desactivé doit renvoyer le type AUTHENTICATION_OK si on ne doit pas être en mode impersonifie" time="0.001" classname="Chrome_65_0_3325_(Windows_7_0_0).AuthenticationService"/>
  <testcase name="AuthenticationService managePutauthenticationInSession Si la fonction putAuthenticatedUserInSession a réussi Mode offline activé doit appeler la fonction d'initialisation du cache offlineManagement" time="0.001" classname="Chrome_65_0_3325_(Windows_7_0_0).AuthenticationService"/>
  <testcase name="AuthenticationService managePutauthenticationInSession Si la fonction putAuthenticatedUserInSession a réussi Mode offline activé doit renvoyer le type APPLI_UNAVAILABLE si la gestion du offline renvoie false sur navigateur" time="0.002" classname="Chrome_65_0_3325_(Windows_7_0_0).AuthenticationService"/>
  <testcase name="AuthenticationService managePutauthenticationInSession Si la fonction putAuthenticatedUserInSession a réussi Mode offline activé doit renvoyer le type AUTHENTICATION_OK si la gestion du offline renvoie false sur l'app" time="0.001" classname="Chrome_65_0_3325_(Windows_7_0_0).AuthenticationService"/>
  <testcase name="AuthenticationService managePutauthenticationInSession Si la fonction putAuthenticatedUserInSession a réussi Mode offline activé doit renvoyer le type INIT_KO si la gestion du offline plante" time="0.001" classname="Chrome_65_0_3325_(Windows_7_0_0).AuthenticationService"/>
  <testcase name="AuthenticationService isInImpersonateMode doit renvoyer true si l'utilisateur est admin, non PNC et non impersonifié" time="0.001" classname="Chrome_65_0_3325_(Windows_7_0_0).AuthenticationService"/>
  <testcase name="AuthenticationService isInImpersonateMode doit renvoyer false si ! (l'utilisateur est admin, non PNC ou non impersonifié)" time="0.001" classname="Chrome_65_0_3325_(Windows_7_0_0).AuthenticationService"/>
  <testcase name="AuthenticationService authenticateUser doit retourner un message d'erreur AUTHENTICATION_KO si les identifiants sont faux" time="0.002" classname="Chrome_65_0_3325_(Windows_7_0_0).AuthenticationService"/>
  <testcase name="AuthenticationService authenticateUser doit appeler la fonction manageUserInformationsInApp si les identifiants sont bons" time="0.001" classname="Chrome_65_0_3325_(Windows_7_0_0).AuthenticationService"/>
  <testcase name="AuthenticationService getAuthenticatedUserFromCache doit mettre l'utilisateur connecté (recupére du storage) en session" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).AuthenticationService"/>
  <testcase name="AuthenticationService putAuthenticatedUserInSession doit retourner false si il n'y a pas d'utilisateur en session" time="0.001" classname="Chrome_65_0_3325_(Windows_7_0_0).AuthenticationService"/>
  <testcase name="AuthenticationService initUserData doit vérifier que l'initialisation des paramétres se lance bien" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).AuthenticationService"/>
  <testcase name="Configuration/url.configuration.ts getBackEndUrl doit retourner une bonne URL si il n'y a pas de params" time="0.002" classname="Chrome_65_0_3325_(Windows_7_0_0).Configuration/url.configuration.ts"/>
  <testcase name="Configuration/url.configuration.ts getBackEndUrl Tests avec des paramêtres doit retourner une bonne URL si il'y a un params en fin d'URL" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).Configuration/url.configuration.ts"/>
  <testcase name="Configuration/url.configuration.ts getBackEndUrl Tests avec des paramêtres doit retourner une bonne URL si il'y a un params en milieu d'URL" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).Configuration/url.configuration.ts"/>
  <testcase name="Configuration/url.configuration.ts getBackEndUrl Tests avec des paramêtres doit retourner une bonne URL si il'y a plusieurs params" time="0.001" classname="Chrome_65_0_3325_(Windows_7_0_0).Configuration/url.configuration.ts"/>
  <testcase name="file Service displayFile doit appeler la fonction displayHTML si on est en mode browser" time="0.001" classname="Chrome_65_0_3325_(Windows_7_0_0).file Service"/>
  <testcase name="file Service displayFile doit appeler la fonction displayHTML si on doit afficher une URL" time="0.001" classname="Chrome_65_0_3325_(Windows_7_0_0).file Service"/>
  <testcase name="file Service displayFile doit appeler la fonction displayPDF si on doit afficher un fichier PDF" time="0.001" classname="Chrome_65_0_3325_(Windows_7_0_0).file Service"/>
  <testcase name="RestWebService On vérifie que l'ensemble des URL utilisées dans l'appli existent bien côté back doit renvoyer une réponse lors de l'appel GET getCareerObjectivesById de l'URL career_objectives/{id}" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).RestWebService">
    <skipped/>
  </testcase>
  <testcase name="RestWebService On vérifie que l'ensemble des URL utilisées dans l'appli existent bien côté back doit renvoyer une réponse lors de l'appel GET getCareerObjectivesByPnc de l'URL career_objectives/pnc/{matricule}" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).RestWebService">
    <skipped/>
  </testcase>
  <testcase name="RestWebService On vérifie que l'ensemble des URL utilisées dans l'appli existent bien côté back doit renvoyer une réponse lors de l'appel GET getEobservation de l'URL eobservation/{matricule}/{rotationId}" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).RestWebService">
    <skipped/>
  </testcase>
  <testcase name="RestWebService On vérifie que l'ensemble des URL utilisées dans l'appli existent bien côté back doit renvoyer une réponse lors de l'appel GET getLegsById de l'URL legs/{legId}" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).RestWebService">
    <skipped/>
  </testcase>
  <testcase name="RestWebService On vérifie que l'ensemble des URL utilisées dans l'appli existent bien côté back doit renvoyer une réponse lors de l'appel GET getLegsCrewMembersById de l'URL legs/{legId}/crew_members" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).RestWebService">
    <skipped/>
  </testcase>
  <testcase name="RestWebService On vérifie que l'ensemble des URL utilisées dans l'appli existent bien côté back doit renvoyer une réponse lors de l'appel GET getPncByMatricule de l'URL pncs/{matricule}" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).RestWebService">
    <skipped/>
  </testcase>
  <testcase name="RestWebService On vérifie que l'ensemble des URL utilisées dans l'appli existent bien côté back doit renvoyer une réponse lors de l'appel GET getPncAutoComplete de l'URL pncs/auto_complete" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).RestWebService">
    <skipped/>
  </testcase>
  <testcase name="RestWebService On vérifie que l'ensemble des URL utilisées dans l'appli existent bien côté back doit renvoyer une réponse lors de l'appel GET getPncUpcomingRotationsByMatricule de l'URL pncs/{matricule}/upcoming_rotations" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).RestWebService">
    <skipped/>
  </testcase>
  <testcase name="RestWebService On vérifie que l'ensemble des URL utilisées dans l'appli existent bien côté back doit renvoyer une réponse lors de l'appel GET getPncLastPerformedRotationsByMatricule de l'URL pncs/{matricule}/last_performed_rotations" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).RestWebService">
    <skipped/>
  </testcase>
  <testcase name="RestWebService On vérifie que l'ensemble des URL utilisées dans l'appli existent bien côté back doit renvoyer une réponse lors de l'appel GET getPncPhotosByMatricule de l'URL pnc_photos/{matricule}" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).RestWebService">
    <skipped/>
  </testcase>
  <testcase name="RestWebService On vérifie que l'ensemble des URL utilisées dans l'appli existent bien côté back doit renvoyer une réponse lors de l'appel GET getSecurityInfos de l'URL me" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).RestWebService">
    <skipped/>
  </testcase>
  <testcase name="RestWebService On vérifie que l'ensemble des URL utilisées dans l'appli existent bien côté back doit renvoyer une réponse lors de l'appel GET getSecretInfosByMatricule de l'URL pin/{matricule}" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).RestWebService">
    <skipped/>
  </testcase>
  <testcase name="RestWebService On vérifie que l'ensemble des URL utilisées dans l'appli existent bien côté back doit renvoyer une réponse lors de l'appel GET getStatutoryCertificateByMatricule de l'URL statutory_certificate/{matricule}" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).RestWebService">
    <skipped/>
  </testcase>
  <testcase name="RestWebService On vérifie que l'ensemble des URL utilisées dans l'appli existent bien côté back doit renvoyer une réponse lors de l'appel GET getSummarySheetByMatricule de l'URL pnc_summary_sheets/{matricule}" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).RestWebService">
    <skipped/>
  </testcase>
  <testcase name="RestWebService On vérifie que l'ensemble des URL utilisées dans l'appli existent bien côté back doit renvoyer une réponse lors de l'appel GET getPncSynchroByPnc de l'URL pnc_synchros/{matricule}" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).RestWebService">
    <skipped/>
  </testcase>
  <testcase name="RestWebService On vérifie que l'ensemble des URL utilisées dans l'appli existent bien côté back doit renvoyer une réponse lors de l'appel GET getWaypointsByCarreObjectiveId de l'URL waypoints/career_objective/{careerObjectiveId}" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).RestWebService">
    <skipped/>
  </testcase>
  <testcase name="RestWebService On vérifie que l'ensemble des URL utilisées dans l'appli existent bien côté back doit renvoyer une réponse lors de l'appel GET getWaypointById de l'URL waypoints/{waypointId}" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).RestWebService">
    <skipped/>
  </testcase>
  <testcase name="RestWebService On vérifie que l'ensemble des URL utilisées dans l'appli existent bien côté back doit renvoyer une réponse lors de l'appel GET getParameters de l'URL parameters" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).RestWebService">
    <skipped/>
  </testcase>
  <testcase name="RestWebService On vérifie que l'ensemble des URL utilisées dans l'appli existent bien côté back doit renvoyer une réponse lors de l'appel GET getProfessionalLevelByMatricule de l'URL professional_levels/{matricule}" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).RestWebService">
    <skipped/>
  </testcase>
  <testcase name="RestWebService On vérifie que l'ensemble des URL utilisées dans l'appli existent bien côté back doit renvoyer une réponse lors de l'appel GET getRotationsByTechId de l'URL rotations/{techId}/legs" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).RestWebService">
    <skipped/>
  </testcase>
  <testcase name="RestWebService On vérifie que l'ensemble des URL utilisées dans l'appli existent bien côté back doit renvoyer une réponse lors de l'appel GET getImpersonationAvailableByMatricule de l'URL check_impersonation_available/{matricule}" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).RestWebService">
    <skipped/>
  </testcase>
  <testcase name="RestWebService On vérifie que l'ensemble des URL utilisées dans l'appli existent bien côté back doit renvoyer une réponse lors de l'appel GET getHelpAssetsByRoleId de l'URL help_assets/pnc_role/{roleId}" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).RestWebService">
    <skipped/>
  </testcase>
  <testcase name="RestWebService On vérifie que l'ensemble des URL utilisées dans l'appli existent bien côté back doit renvoyer une réponse lors de l'appel GET getPing de l'URL ping" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).RestWebService">
    <skipped/>
  </testcase>
  <testcase name="AuthorizationService doit renvoyer true si le user a le droit de voir l'impersonnification " time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).AuthorizationService"/>
  <testcase name="AuthorizationService doit renvoyer false si le user n'a pas le droit de voir l'impersonnification " time="0.001" classname="Chrome_65_0_3325_(Windows_7_0_0).AuthorizationService"/>
  <testcase name="Base Provider Test Online/ Offline doit retourner le onlineProvider quand la connection est OK" time="0.001" classname="Chrome_65_0_3325_(Windows_7_0_0).Base Provider"/>
  <testcase name="Base Provider Test Online/ Offline doit retourner le offlineProvider quand la connection est KO" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).Base Provider"/>
  <testcase name="Connectivity Service test de la fonction setConnected doit vérifier que la mise en deconnecté fonctionne" time="0.002" classname="Chrome_65_0_3325_(Windows_7_0_0).Connectivity Service"/>
  <testcase name="Connectivity Service test de la fonction setConnected doit vérifier que la mise en connecté fonctionne" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).Connectivity Service"/>
  <testcase name="Connectivity Service test de la fonction loopPingAPI stoppe le ping si la connection est OK doit appeler la fonction stopPingApi" time="0.001" classname="Chrome_65_0_3325_(Windows_7_0_0).Connectivity Service"/>
  <testcase name="Connectivity Service test de la fonction loopPingAPI stoppe le ping si la connection est OK doit marquer la connection à true" time="0.002" classname="Chrome_65_0_3325_(Windows_7_0_0).Connectivity Service"/>
  <testcase name="Connectivity Service test de la fonction loopPingAPI continue le ping si la connexion est KO ne doit pas appeler la fonction stopPingAPI" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).Connectivity Service">
    <skipped/>
  </testcase>
  <testcase name="Connectivity Service test de la fonction loopPingAPI continue le ping si la connexion est KO doit marquer la connection à false" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).Connectivity Service">
    <skipped/>
  </testcase>
  <testcase name="ProfessionalLevelService toProfessionalLevel L'objet retourné devrait être de type ProfessionalLevelModel car l'objet donné en entrée respecte le format de cette classe" time="0.001" classname="Chrome_65_0_3325_(Windows_7_0_0).ProfessionalLevelService"/>
  <testcase name="ProfessionalLevelService toProfessionalLevel L'objet retourné ne devrait pas être de type ProfessionalLevelModel car l'objet donné en entrée ne respecte pas le format de cette classe" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).ProfessionalLevelService"/>
  <testcase name="ProfessionalLevelService toProfessionalLevel L'objet retourné devrait être null car l'objet donné en entrée est null" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).ProfessionalLevelService"/>
  <testcase name="Session Service Get Active User si il n'y a pas d'impersonnification, l'utilisateur actif doit être l'utilisateur connecté" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).Session Service"/>
  <testcase name="Session Service Get Active User si il y a d'impersonnification, l'utilisateur actif doit être l'utilisateur impersonnifié" time="0.001" classname="Chrome_65_0_3325_(Windows_7_0_0).Session Service"/>
  <testcase name="Session Service Is Active User si il n'y a pas d'impersonnification, l'utilisateur actif doit être l'utilisateur connecté" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).Session Service"/>
  <testcase name="Session Service Is Active User si il y a d'impersonnification, l'utilisateur actif doit être l'utilisateur impersonnifié" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).Session Service"/>
  <testcase name="Session Service Is Active User doit renvoyer false si il n'y a de pnc" time="0" classname="Chrome_65_0_3325_(Windows_7_0_0).Session Service"/>
  <system-out>
    <![CDATA[Chrome 65.0.3325 (Windows 7.0.0) LOG: 'localhost'
,Chrome 65.0.3325 (Windows 7.0.0) ERROR
  Disconnectedundefined

]]>
  </system-out>
  <system-err/>
</testsuite>