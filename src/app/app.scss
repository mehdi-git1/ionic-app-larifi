// http://ionicframework.com/docs/theming/
// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.
@import '../theme/toast.scss';
@import '../theme/label.scss';
@import '../theme/input.scss';
@import '../theme/button-bar.scss';
@import '../theme/status.scss';
@import '../theme/icon.scss';
@import '../theme/navbar.scss';
@import '../node_modules/@angular/material/_theming.scss';
@import '../theme/auto-complete.scss';

@include mat-core();

// A utiliser sur les éléments cliquables (les labels ont un style contraire, on est obligé de les surcharger) */
.clickable,
.clickable label {
    cursor: pointer;
}

// Pour ajouter une valeur "nulle" (un tiret)
.no-value:after {
    content: '-';
}

// Spinner utilisé au chargement de l'appli
.back-button {
    color: color($colors, white);
}

body,
.app-root,
.nav-decor {
    // Pour surcharger le fond sur ipad
    background-color: color($colors, grey90) !important;
}

ion-textarea,
ion-input {
    background-color: color($colors, white);
}

.content {
    background-color: transparent;
}

.item {
    background-color: transparent;
}

.hidden {
    visibility: hidden;
}

.scroll-content {
    overflow-y: auto !important;
}
